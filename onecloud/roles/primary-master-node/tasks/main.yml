- name: Do common setup
  include_role:
    name: common

- name: TCP Configuration
  include_role:
    name: tcp

- name: Get default gateway
  shell: "ip route get 1 | head -n 1 | awk '{print $3}'"
  register: default_gateway_ret

- name: set default gateway var
  set_fact:
    default_gateway: "{{ default_gateway_ret.stdout }}"

- name: "Get default gateway {{ default_gateway }} local ip address"
  shell: "ip route get 1 | head -n 1 | awk '{print $7}'"
  register: default_ip_ret

- name: set default ip var
  set_fact:
    default_ip: "{{ default_ip_ret.stdout }}"

- name: "Get default ip address {{ default_ip }} masklen"
  shell: "ip route list | grep {{ default_ip }} | head -n 1 | awk '{print $1}' | cut -d '/' -f 2"
  register: default_masklen_ret

- name: set default ip masklen
  set_fact:
    default_masklen: "{{ default_masklen_ret.stdout }}"

- name: Get cluster token
  shell: /opt/yunion/bin/ocadm token list | cut -d  ' ' -f1 | sed -n '2p'
  register: K8S_TOKEN

- name: show command
  shell: |
    echo "/opt/yunion/bin/ocadm config images pull --image-repository {{ image_repository | default('registry.cn-beijing.aliyuncs.com/yunionio')}} --onecloud-version {{ onecloud_version | default('latest') }} --operator-version {{ onecloud_version | default('latest') }}"

- name: Pull ocadm images on node for centos x86
  command: "/opt/yunion/bin/ocadm config images pull --image-repository {{ image_repository | default('registry.cn-beijing.aliyuncs.com/yunionio')}} --onecloud-version {{ onecloud_version | default('latest') }} --operator-version {{ onecloud_version | default('latest') }}"
  register: command_result
  changed_when: '"Image is up to date" not in command_result.stdout or "Already exists" not in command_result.stdout'
  when:
  - K8S_TOKEN.stdout|length == 0
  - is_centos_x86 is defined

- name: Pull ocadm images on node for arm64
  shell: |
    for i in registry.cn-beijing.aliyuncs.com/yunionio/host-image:v1.0.1 registry.cn-beijing.aliyuncs.com/yunionio/traefik:v1.7 registry.cn-beijing.aliyuncs.com/yunionio/openvswitch:2.10.5-1 registry.cn-beijing.aliyuncs.com/yunionio/telegraf:release-1.5.3 registry.cn-beijing.aliyuncs.com/yunionio/telegraf-init:release-1.5.2 registry.cn-beijing.aliyuncs.com/yunionio/local-path-provisioner:v0.0.11 registry.cn-beijing.aliyuncs.com/yunionio/k8s-sidecar:0.1.275 registry.cn-beijing.aliyuncs.com/yunionio/etcd:v3.4.6 registry.cn-beijing.aliyuncs.com/yunionio/etcd:3.4.6 registry.cn-beijing.aliyuncs.com/yunionio/calico-node:v3.12.1 registry.cn-beijing.aliyuncs.com/yunionio/calico-cni:v3.12.1 registry.cn-beijing.aliyuncs.com/yunionio/calico-kube-controllers:v3.12.1 registry.cn-beijing.aliyuncs.com/yunionio/kube-apiserver:v1.15.8 registry.cn-beijing.aliyuncs.com/yunionio/kube-controller-manager:v1.15.8 registry.cn-beijing.aliyuncs.com/yunionio/kube-proxy:v1.15.8 registry.cn-beijing.aliyuncs.com/yunionio/kube-scheduler:v1.15.8 registry.cn-beijing.aliyuncs.com/yunionio/promtail:v1.2.0 registry.cn-beijing.aliyuncs.com/yunionio/loki:v1.2.0 registry.cn-beijing.aliyuncs.com/yunionio/metrics-server:v0.3.6 registry.cn-beijing.aliyuncs.com/yunionio/influxdb:1.7.7 registry.cn-beijing.aliyuncs.com/yunionio/coredns:1.3.1 registry.cn-beijing.aliyuncs.com/yunionio/busybox:1.28.0-glibc registry.cn-beijing.aliyuncs.com/yunionio/pause:3.1
    do
      docker pull $i --platform arm64
    done
  register: command_result
  changed_when: '"Image is up to date" not in command_result.stdout or "Already exists" not in command_result.stdout'
  when:
  - K8S_TOKEN.stdout|length == 0
  - is_uos_arm64 is defined

- name: Check node is init
  shell: test -f /etc/kubernetes/kubelet.conf
  register: kubelet_result
  ignore_errors: yes
  changed_when: false
  failed_when: false

- block:
  - name: construct controlplane endpoint
    set_fact:
      controlplane_endpoint: "{{k8s_controlplane_host}}:{{ k8s_controlplane_port | default(6443) }}"

  - name: construct init args
    set_fact:
      init_args: "init --control-plane-endpoint {{ controlplane_endpoint }} --mysql-host {{ db_host }} --mysql-user {{ db_user }} --mysql-password {{ db_password}}"

  - name: construct init args with db_port config
    set_fact:
      init_args: "{{ init_args }} --mysql-port {{ db_port }}"
    when:
      db_port is defined

  - name: construct image repository
    set_fact:
      init_args: "{{ init_args }} --image-repository {{ image_repository }}"
    when:
      image_repository is defined

  - name: construct init args apiserver_advertise_address
    set_fact:
      init_args: "{{ init_args }} --apiserver-advertise-address {{ apiserver_advertise_address }} "
    when:
      apiserver_advertise_address is defined

  - name: construct init args node_ip
    set_fact:
      init_args: "{{ init_args }} --node-ip {{ node_ip }}"
    when:
      node_ip is defined

  - name: construct init args host_networks
    set_fact:
      init_args: "{{ init_args }} --host-networks {{ host_networks }} "
    when:
      host_networks is defined

  - name: construct onecloud version
    set_fact:
      init_args: "{{ init_args }} --onecloud-version {{ onecloud_version }} --operator-version {{ onecloud_version }}"
    when:
      onecloud_version is defined

  - name: construct onecloud version
    set_fact:
      init_args: "{{ init_args }} --addon-calico-ip-autodetection-method {{ ip_autodetection_method }}"
    when:
      ip_autodetection_method is defined

  - name: init ha ip
    set_fact:
      init_args: "{{ init_args }} --high-availability-vip {{ high_availability_vip }}"
    when:
      high_availability_vip is defined

  - name: init keepalived version tag
    set_fact:
      init_args: "{{ init_args }} --keepalived-version-tag {{ keepalived_version_tag }}"
    when:
      keepalived_version_tag is defined

  - name: init node as onecloud host agent
    set_fact:
      init_args: "{{ init_args }} --enable-host-agent"
    when:
    - high_availability_vip is not defined
    - k8s_node_as_oc_host|default(false)|bool == true

- name: Use ocadm init first master node
  command: "/opt/yunion/bin/ocadm {{ init_args }}"
  when: kubelet_result.rc != 0

- name: "Wait 500 seconds for primary master to response: {{ controlplane_endpoint }}"
  wait_for:
    host: "{{ k8s_controlplane_host }}"
    port: "{{ k8s_controlplane_port | default(6443)}}"
    delay: 1
    timeout: 500
  run_once: yes

- name: Export KUBECONFIG in master's ~/.bashrc
  lineinfile:
    dest: ~/.bashrc
    line: "export KUBECONFIG=/etc/kubernetes/admin.conf"
    state: present
    create: yes
    regexp: '^export KUBECONFIG=.*'
  when:
  - high_availability_vip is not defined
  - shell is undefined or shell == 'bash'

- name: Source kubectl bash completion in master's ~/.bashrc
  lineinfile:
    dest: ~/.bashrc
    line: "source <(kubectl completion bash)"
    state: present
    create: yes
    regexp: '.*kubectl completion bash.*'
  when:
  - high_availability_vip is not defined
  - shell is undefined or shell == 'bash'

- name: Wait onecloud CRD created
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  shell: 'kubectl get crd | grep onecloudcluster'
  retries: 30
  delay: 10
  register: result
  until: result.rc == 0
  when: high_availability_vip is not defined

- name: Check onecloud cluster exists
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  shell: "kubectl get onecloudcluster -n onecloud | grep default | wc -l"
  register: OC_CLUSTER_COUNT
  when: high_availability_vip is not defined

- name: init construct create cluster args
  set_fact:
    init_cluster_args: ""

- name: construct create cluster args
  set_fact:
    init_cluster_args: "--use-ee"
  when:
  - use_ee is defined
  - use_ee|default(false)|bool == true

- name: Create essential services, wait for a few minutes...
  shell: "/opt/yunion/bin/ocadm cluster create {{ init_cluster_args }} --wait"
  retries: 6
  delay: 10
  register: result
  until: result.rc == 0
  ignore_errors: yes
  when:
  - high_availability_vip is not defined
  - OC_CLUSTER_COUNT.stdout|int == 0

- name: "Write cluster rcadmin in master's ~/.onecloud_rcadmin"
  shell: |
    /opt/yunion/bin/ocadm cluster rcadmin > ~/.onecloud_rcadmin
  retries: 6
  delay: 10
  ignore_errors: yes

- name: "Source ~/.onecloud_rcadmin in ~/.bashrc"
  lineinfile:
    dest: ~/.bashrc
    line: "source ~/.onecloud_rcadmin"
    state: present
    create: yes
    regexp: '^source ~/.onecloud_rcadmin'
  ignore_errors: yes
  when:
  - shell is undefined or shell == 'bash'

- name: "Check onecloud user {{ onecloud_user }} exists"
  shell: |
    eval $(/opt/yunion/bin/ocadm cluster rcadmin)
    /opt/yunion/bin/climc user-list | grep -w {{ onecloud_user }} | wc -l
  register: OC_USER_COUNT
  ignore_errors: yes

- name: "Create onecloud web login user {{ onecloud_user }}"
  shell: |
   eval $(/opt/yunion/bin/ocadm cluster rcadmin)
   /opt/yunion/bin/climc user-create --password {{ onecloud_user_password }} --enabled {{ onecloud_user }}
  ignore_errors: yes
  when:
  - OC_USER_COUNT.stdout|int == 0

- name: "Update onecloud user {{ onecloud_user }} password to {{ onecloud_user_password }}"
  shell: |
    source ~/.onecloud_rcadmin
    /opt/yunion/bin/climc user-update --password {{ onecloud_user_password }} --enabled --allow-web-console {{ onecloud_user }}
  when:
  - use_ee is not defined or not use_ee

- name: "Make onecloud user {{ onecloud_user }} as system admin"
  shell: |
    source ~/.onecloud_rcadmin
    /opt/yunion/bin/climc project-add-user system {{ onecloud_user }} admin
  when:
  - use_ee is not defined or not use_ee

- name: Check if admin network adm0 exists
  shell: |
    source ~/.onecloud_rcadmin
    /opt/yunion/bin/climc network-show adm0 > /dev/null 2>&1
  register: network_admin_exist
  ignore_errors: yes
  changed_when: false
  failed_when: false
  when: high_availability_vip is not defined

- name: "Check if network contains {{ default_ip }}"
  shell: |
    source ~/.onecloud_rcadmin
    /opt/yunion/bin/climc network-list --ip {{ default_ip }} | grep -v Total | wc -l
  register: network_count_ret
  ignore_errors: yes
  when: high_availability_vip is not defined

- name: set admin network count
  set_fact:
    admin_network_count: "{{ network_count_ret.stdout }}"
  when: high_availability_vip is not defined

- name: "Register adm0 network for {{ default_ip }}/{{ default_masklen }}, gateway {{ default_gateway }}"
  shell: |
    source ~/.onecloud_rcadmin
    /opt/yunion/bin/climc network-create --gateway {{ default_gateway }} --server-type baremetal bcast0 adm0 {{ default_ip }} {{ default_ip }} {{ default_masklen }}
    /opt/yunion/bin/climc network-private adm0
  when: high_availability_vip is not defined and network_admin_exist.rc != 0 and admin_network_count|int == 0

- name: "post install scripts"
  shell: |
    find /opt/yunion/upgrade/post-install -name '*.sh' -type f| while read line
    do
      echo "processing $line ... "
      sh -c "$line" 2>&1 | tee -a /tmp/post-install.log
      echo "[DONE ]processing $line OK"
    done
  when: high_availability_vip is not defined
