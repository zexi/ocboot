---
# This role contains common plays that will run on all nodes
- name: Install yum utils
  yum:
    name:
      - yum-utils
      - bash-completion
      - epel-release
  when:
  - is_centos_x86 is defined

- name: Set facts
  set_fact:
    major_version_task_file: "{{ onecloud_major_version }}.yml"

- name: Import task "{{ major_version_task_file }}"
  include_tasks: "{{ major_version_task_file }}"

- name: gather os specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_distribution_major_version|lower|replace('/', '_') }}.{{ ansible_architecture }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_distribution_version|lower|replace('/', '_') }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_distribution_release|lower }}-{{ ansible_architecture }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_distribution_release|lower }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_distribution_major_version|lower|replace('/', '_') }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}-{{ ansible_architecture }}.yml"
        - "{{ ansible_distribution|lower | replace(' ', '_') }}.yml"
        - "{{ ansible_os_family|lower }}-{{ ansible_architecture }}.yml"
        - "{{ ansible_os_family|lower }}.yml"
        - defaults.yml
      paths:
        - ../vars
      skip: true
  tags:
    - facts

- name: init apt sourced.list for arm64
  copy:
    src: apt.yunion.list
    dest: /etc/apt/sources.list.d/yunion.list
    owner: root
    group: root
    mode: "0644"
  when:
  - is_uos_arm64 is defined or is_debian_arm64 is defined


- name: update apt cache for arm64
  shell: |
    sudo apt-get update -y
  when:
  - is_uos_arm64 is defined or is_debian_arm64 is defined


- name: config iptables for UOS
  shell: |
    if iptables -V |grep -wq nf_tables && ls -l /usr/sbin/iptables |grep -wq alternatives; then
      update-alternatives --set iptables /usr/sbin/iptables-legacy
      update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
      update-alternatives --set arptables /usr/sbin/arptables-legacy
      update-alternatives --set ebtables /usr/sbin/ebtables-legacy
      if [ ! -x /usr/sbin/nft ]; then
          aptitude install nftables -y
      fi
      nft flush ruleset
    fi
  when:
  - is_uos_arm64 is defined
  args:
    executable: /bin/bash

- name: install packages via loop
  package: name="{{ item }}"
  with_items:
  - "{{ common_packages }}"
  when:
  - common_packages is defined

- name: Check that if selinux config exists
  stat:
    path: /etc/selinux/config
  register: selinux_conf_exists

- name: Turn off selinux
  selinux:
    state: disabled
  when: selinux_conf_exists.stat.exists

- name: Gather service facts
  service_facts:

- name: Disable systemd services
  service:
    name: "{{ item }}"
    enabled: no
    state: stopped
  when: "item + '.service' in ansible_facts.services"
  loop:
  - firewalld
  - NetworkManager

- name: Load br_netfilter
  modprobe:
    name: br_netfilter
    state: present

- name: Load br_netfilter at boot
  copy:
    owner: root
    group: root
    mode: "0644"
    dest: /etc/modules-load.d/kubernetes.conf
    content:
      br_netfilter

- name: Change sysctl setting
  sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
  loop:
  - net.bridge.bridge-nf-call-iptables
  - net.bridge.bridge-nf-call-ip6tables
  - net.ipv4.ip_forward

- name: Change sysctl fs.inotify.max_user_watches
  sysctl:
    name: "fs.inotify.max_user_watches"
    value: "65536"
    state: present

- name: Change sysctl fs.inotify.max_user_instances
  sysctl:
    name: "fs.inotify.max_user_instances"
    value: "8192"
    state: present

#  https://github.com/kubernetes-retired/contrib/blob/master/ansible/roles/node/tasks/swapoff.yml
- name: Turn off swap mount
  mount:
    name: swap
    fstype: swap
    state: absent
- name: Turn off swap now
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /etc/sysconfig/modules/
    state: directory
    mode: '0755'

- name: Config ipvs
  copy:
    owner: root
    group: root
    mode: "0755"
    src: ipvs.modules
    dest: /etc/sysconfig/modules/ipvs.modules

- name: Load ipvs modules
  shell:
    /etc/sysconfig/modules/ipvs.modules

# docker
- block:
  - name: Install docker
    yum:
      name:
        - docker-ce-19.03.9
        - docker-ce-cli-19.03.9
        - containerd.io
    when:
    - is_centos_x86 is defined

  - name: Make /etc/docker dir
    file:
      path: /etc/docker
      state: directory
      owner: root
      group: root

  - name: Config docker file
    template: src=daemon.json.j2 dest=/etc/docker/daemon.json

  - name: Restart docker service
    service: name=docker state=restarted daemon_reload=yes enabled=yes
  when:
    skip_docker_config is not defined or skip_docker_config|default(false)|bool == false

# k8s packages
- name: Enable kubelet
  service: name=kubelet enabled=yes
  tags: k8s

- name: Export yunion bin path in /etc/profile
  lineinfile:
    dest: /etc/profile
    line: "export PATH=$PATH:/opt/yunion/bin"
    state: present
    create: yes
    regexp: '^export PATH=.*/opt/yunion/bin'
  when: shell is undefined or shell == 'bash'

- name: Enable yunion systemd services
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
  - yunion-executor
